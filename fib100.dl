codata Stream a
  { Head : Stream a -> a
  , Tail : Stream a -> Stream a }

let zipwith = (fix f in { Head [# o a b] -> o (Head a) (Head b)
                        , Tail [# o a b] -> f o (Tail a) (Tail b) }) in
let fib = (fix x in
             { Head # -> 1
    	     , Head [Tail #] -> 1
             , Tail [Tail #] -> zipwith {# p q -> p + q} x (Tail x) }) in
cocase
[Head
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail
[Tail #]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
fib
